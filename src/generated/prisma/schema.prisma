// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Provinsi {
  id_provinsi   Int    @id @default(autoincrement())
  nama_provinsi String @db.VarChar(100)

  kabupaten Kabupaten[]
}

model Kabupaten {
  id_kabupaten   Int    @id @default(autoincrement())
  nama_kabupaten String @db.VarChar(100)
  type           String @db.VarChar(100)

  id_provinsi Int
  provinsi    Provinsi @relation(fields: [id_provinsi], references: [id_provinsi])

  facilitators Facilitator[]
  workshop     Workshop[]
}

model Pengguna {
  id_pengguna            String   @id @default(cuid())
  nama_depan_pengguna    String   @db.VarChar(50)
  nama_belakang_pengguna String   @db.VarChar(50)
  tanggal_lahir_pengguna DateTime
  email_pengguna         String   @db.VarChar(50)
  nomor_telepon_pengguna String   @db.VarChar(13)
  jenisKelamin           Int
  password_pengguna      String   @db.VarChar(100)
  tanggal_pembuatan_akun DateTime
  kode_verifikasi        String   @db.Char(4)
  status_verfikasi       Boolean
  avatar                 String   @db.VarChar(255)
  status_aktif           Boolean  @default(true)

  workshop_terdaftar WorkshopTerdaftar[]
  artikel            Artikel[]
  artikel_disimpan   ArtikelDisimpan[]
  artikel_disukai    ArtikelDisukai[]
  komentar_artikel   KomentarArtikel[]
  tanaman_pengguna   TanamanPengguna[]

  @@unique([email_pengguna])
  @@unique([nomor_telepon_pengguna])
}

model Facilitator {
  id_facilitator             String   @id @default(cuid())
  nama_facilitator           String   @db.VarChar(50)
  email_facilitator          String   @db.VarChar(50)
  nomor_telepon_facilitator  String   @db.VarChar(13)
  password_facilitator       String   @db.VarChar(100)
  tanggal_pembuatan_akun     DateTime
  alamat_lengkap_facilitator String   @db.VarChar(255)
  avatar                     String   @db.VarChar(255)
  status_aktif               Boolean  @default(true)

  id_kabupaten Int
  kabupaten    Kabupaten @relation(fields: [id_kabupaten], references: [id_kabupaten])

  workshops Workshop[]

  @@unique([email_facilitator])
  @@unique([nomor_telepon_facilitator])
}

model Admin {
  id_admin               String   @id @default(cuid())
  nama_depan_admin       String   @db.VarChar(50)
  nama_belakang_admin    String   @db.VarChar(50)
  email_admin            String   @db.VarChar(50)
  password_admin         String   @db.VarChar(100)
  tanggal_pembuatan_akun DateTime
  avatar                 String   @db.VarChar(255)

  @@unique([email_admin])
}

enum StatusArtikel {
  DRAFT
  PUBLISHED
}

enum StatusVerifikasiArtikel {
  MENUNGGU
  DIVERIFIKASI
  DITOLAK
}

model Artikel {
  id_artikel          String                  @id @db.VarChar(50)
  judul_artikel       String                  @db.VarChar(100)
  tanggal_artikel     DateTime                @default(now())
  deskripsi_artikel   String                  @db.Text
  isi_artikel         String                  @db.Text
  status_artikel      StatusArtikel
  status_verifikasi   StatusVerifikasiArtikel
  gambar_artikel      String                  @db.VarChar(255)
  status_aktif        Boolean                 @default(true)
  id_kategori_artikel Int
  kategori            KategoriArtikel         @relation(fields: [id_kategori_artikel], references: [id_kategori_artikel])
  id_pengguna         String
  pengguna            Pengguna                @relation(fields: [id_pengguna], references: [id_pengguna])
  artikel_disimpan    ArtikelDisimpan[]
  artikel_disukai     ArtikelDisukai[]
  komentar_artikel    KomentarArtikel[]
}

model KategoriArtikel {
  id_kategori_artikel   Int    @id @default(autoincrement())
  nama_kategori_artikel String @db.VarChar(100)

  artikel Artikel[]
}

model ArtikelDisimpan {
  id_penyimpanan Int      @id @default(autoincrement())
  id_artikel     String
  artikel        Artikel  @relation(fields: [id_artikel], references: [id_artikel])
  id_pengguna    String
  pengguna       Pengguna @relation(fields: [id_pengguna], references: [id_pengguna])

  @@unique([id_artikel, id_pengguna])
}

model ArtikelDisukai {
  id_disukai  Int      @id @default(autoincrement())
  id_artikel  String
  artikel     Artikel  @relation(fields: [id_artikel], references: [id_artikel])
  id_pengguna String
  pengguna    Pengguna @relation(fields: [id_pengguna], references: [id_pengguna])
  rating      Int

  @@unique([id_artikel, id_pengguna])
}

model KomentarArtikel {
  id_komentar      Int      @id @default(autoincrement())
  id_artikel       String
  artikel          Artikel  @relation(fields: [id_artikel], references: [id_artikel])
  id_pengguna      String
  pengguna         Pengguna @relation(fields: [id_pengguna], references: [id_pengguna])
  komentar         String   @db.Text
  tanggal_komentar DateTime

  @@unique([id_artikel, id_komentar])
}

enum StatusVerifikasiWorkshop {
  MENUNGGU
  DIVERIFIKASI
  DITOLAK
}

model Workshop {
  id_workshop             String                   @id @db.VarChar(50)
  judul_workshop          String                   @db.VarChar(100)
  tanggal_workshop        DateTime                 @db.Date
  alaamt_lengkap_workshop String                   @db.VarChar(100)
  deskripsi_workshop      String                   @db.VarChar(1000)
  harga_workshop          Decimal                  @db.Decimal(10, 2)
  kapasitas               Int
  status_verifikasi       StatusVerifikasiWorkshop
  lat_lokasi              Float
  long_lokasi             Float
  gambar_workshop         String                   @db.VarChar(255)
  status_aktif            Boolean                  @default(true)
  waktu_mulai             String                   @default("08:00") @db.VarChar(100)
  waktu_berakhir          String                   @default("16:00") @db.VarChar(100)

  id_facilitator String
  facilitator    Facilitator         @relation(fields: [id_facilitator], references: [id_facilitator])
  id_kabupaten   Int
  kabupaten      Kabupaten           @relation(fields: [id_kabupaten], references: [id_kabupaten])
  pendaftaran    WorkshopTerdaftar[]
}

model WorkshopTerdaftar {
  id_pendaftaran        Int      @id @default(autoincrement())
  nama_depan_peserta    String   @db.VarChar(100)
  nama_belakang_peserta String   @db.VarChar(100)
  email_peserta         String   @db.VarChar(100)
  nomor_telepon_peserta String   @db.VarChar(50)
  jenis_kelamin_peserta Int
  tanggal_pendaftaran   DateTime @default(now())
  status_pembayaran     Boolean  @default(false)
  nomor_tiket           String?  @db.VarChar(50)

  pengguna             Pengguna         @relation(fields: [id_pengguna], references: [id_pengguna])
  id_pengguna          String
  workshop             Workshop         @relation(fields: [id_workshop], references: [id_workshop])
  id_workshop          String
  metode_pembayaran    MetodePembayaran @relation(fields: [id_metode_pembayaran], references: [id_metode_pembayaran])
  id_metode_pembayaran Int

  @@unique([nomor_tiket])
}

model MetodePembayaran {
  id_metode_pembayaran     Int    @id @default(autoincrement())
  nama_metode_pembayaran   String @db.VarChar(100)
  gambar_metode_pembayaran String @db.VarChar(50)

  workshop_terdaftar WorkshopTerdaftar[]
}

model KategoriTanaman {
  id_kategori_tanaman   Int       @id @default(autoincrement())
  nama_kategori_tanaman String    @db.VarChar(100)
  tanaman               Tanaman[]
}

model Tanaman {
  id_tanaman          String           @id @db.VarChar(36)
  nama_tanaman        String           @db.VarChar(100)
  nama_latin          String           @db.VarChar(100)
  durasi_penanaman    Int
  deskripsi_tanaman   String           @db.Text
  gambar_tanaman      String?          @db.VarChar(255)
  tingkat_kesulitan   TingkatKesulitan @default(MUDAH)
  id_kategori_tanaman Int

  kategori          KategoriTanaman    @relation(fields: [id_kategori_tanaman], references: [id_kategori_tanaman])
  instruksi_tanaman InstruksiTanaman[]
  hari_penanaman    HariPenanaman[]
  tanaman_pengguna  TanamanPengguna[]
}

model InstruksiTanaman {
  id_instruksi Int    @id @default(autoincrement())
  instruksi    String @db.Text
  urutan       Int    @default(1)
  id_tanaman   String @db.VarChar(36)

  tanaman Tanaman @relation(fields: [id_tanaman], references: [id_tanaman], onDelete: Cascade)
}

model HariPenanaman {
  id_hari_penanaman Int           @id @default(autoincrement())
  hari_ke           Int
  nama_fase         FasePenanaman
  deskripsi_fase    String?       @db.Text
  id_tanaman        String        @db.VarChar(36)

  tanaman         Tanaman          @relation(fields: [id_tanaman], references: [id_tanaman], onDelete: Cascade)
  tugas_penanaman TugasPenanaman[]

  @@unique([id_tanaman, hari_ke])
}

model TugasPenanaman {
  id_tugas          Int        @id @default(autoincrement())
  nama_tugas        String     @db.VarChar(255)
  jenis_tugas       JenisTugas
  estimasi_waktu    Int?
  id_hari_penanaman Int

  hari_penanaman HariPenanaman @relation(fields: [id_hari_penanaman], references: [id_hari_penanaman], onDelete: Cascade)
}

model TanamanPengguna {
  id_tanaman_pengguna  String          @id @default(cuid()) @db.VarChar(36)
  nama_custom          String?         @db.VarChar(100)
  tanggal_penanaman    DateTime        @default(now())
  tanggal_target_panen DateTime? // Dihitung otomatis
  status_penanaman     StatusPenanaman @default(AKTIF)
  progress_persen      Float           @default(0.0)
  id_tanaman           String          @db.VarChar(36)
  id_pengguna          String          @db.VarChar(36)

  // Relations
  tanaman      Tanaman               @relation(fields: [id_tanaman], references: [id_tanaman])
  pengguna     Pengguna              @relation(fields: [id_pengguna], references: [id_pengguna])
  hari_tanaman HariTanamanPengguna[]
}

// Model Hari Tanaman Pengguna (Instance hari untuk user)
model HariTanamanPengguna {
  id_hari_tanaman_pengguna Int           @id @default(autoincrement())
  hari_ke                  Int
  tanggal_aktual           DateTime
  fase_penanaman           FasePenanaman
  status_hari              StatusHari    @default(BELUM_DIMULAI)
  catatan_harian           String?       @db.Text
  total_tugas              Int           @default(0)
  tugas_selesai            Int           @default(0)
  progress_hari_persen     Float         @default(0.0)
  id_tanaman_pengguna      String        @db.VarChar(36)

  // Relations
  tanaman_pengguna TanamanPengguna          @relation(fields: [id_tanaman_pengguna], references: [id_tanaman_pengguna], onDelete: Cascade)
  tugas_penanaman  TugasPenanamanPengguna[]

  @@unique([id_tanaman_pengguna, hari_ke])
}

// Model Tugas Penanaman Pengguna (Instance tugas untuk user)
model TugasPenanamanPengguna {
  id_tugas_penanaman_pengguna Int        @id @default(autoincrement())
  nama_tugas                  String     @db.VarChar(255)
  deskripsi_tugas             String?    @db.Text
  jenis_tugas                 JenisTugas
  status_selesai              Boolean    @default(false)
  tanggal_selesai             DateTime?
  estimasi_waktu              Int?
  id_hari_tanaman_pengguna    Int

  // Relations
  hari_tanaman HariTanamanPengguna @relation(fields: [id_hari_tanaman_pengguna], references: [id_hari_tanaman_pengguna], onDelete: Cascade)
}

// ENUMS
enum JenisTugas {
  TUGAS_BIASA // Tugas rutin seperti menyiram
  PENGECEKAN_HARIAN // Cek kondisi tanaman  
}

enum FasePenanaman {
  PERSIAPAN // Fase persiapan lahan/pot
  PENANAMAN // Fase penanaman benih/bibit
  PERTUMBUHAN // Fase pertumbuhan
  PEMELIHARAAN // Fase pemeliharaan intensif
  PRAPANEN // Fase menjelang panen
  PANEN // Fase panen
  PASCA_PANEN // Fase setelah panen
}

enum StatusPenanaman {
  AKTIF // Sedang dalam proses penanaman
  SELESAI // Sudah selesai (panen)  
}

enum StatusHari {
  BELUM_DIMULAI
  SEDANG_BERJALAN
  SELESAI
  TERLEWAT
}

enum TingkatKesulitan {
  SANGAT_MUDAH
  MUDAH
  SEDANG
  SULIT
  SANGAT_SULIT
}
