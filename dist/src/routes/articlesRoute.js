"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const articlesController_1 = require("../controller/articlesController");
const authMiddleware_1 = __importDefault(require("../middlewares/authMiddleware"));
const roleMiddleware_1 = __importDefault(require("../middlewares/roleMiddleware"));
const multer_1 = require("../utils/multer/multer");
const articlesRouter = express_1.default.Router();
const uploadArticleImage = (0, multer_1.createMulterUploader)('articles');
articlesRouter.get('/articles/saved', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.getSaved);
articlesRouter.post('/articles/create', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), uploadArticleImage.single('image'), articlesController_1.create);
articlesRouter.get('/articles', authMiddleware_1.default, (0, roleMiddleware_1.default)(['admin']), articlesController_1.getAll);
articlesRouter.get('/articles/active', articlesController_1.getAllActive);
articlesRouter.get('/articles/own', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user', 'admin']), articlesController_1.getOwnArticle);
articlesRouter.get('/articles/own/:id', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user', 'admin']), articlesController_1.getOwnArticleById);
articlesRouter.get('/articles/:id', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user', 'admin']), articlesController_1.getById);
articlesRouter.put('/articles/:id', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), uploadArticleImage.single('image'), articlesController_1.update);
articlesRouter.patch('/articles/:id', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.verify);
articlesRouter.patch('/articles/:id/verify', authMiddleware_1.default, (0, roleMiddleware_1.default)(['admin']), articlesController_1.verify);
articlesRouter.delete('/articles/:id', authMiddleware_1.default, (0, roleMiddleware_1.default)(['admin', 'user']), articlesController_1.deleteArtic);
articlesRouter.patch('/articles/:id/toggle', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.toggle);
articlesRouter.post('/articles/:id/comments', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.comment);
articlesRouter.post('/articles/:id/save', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.save);
articlesRouter.delete('/articles/:id/save', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.unSave);
articlesRouter.post('/articles/:id/like', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.like);
articlesRouter.delete('/articles/:id/like', authMiddleware_1.default, (0, roleMiddleware_1.default)(['user']), articlesController_1.unLike);
exports.default = articlesRouter;
